/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   execute.h                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: junylee <marvin@42.fr>                     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/07/06 17:02:03 by junylee           #+#    #+#             */
/*   Updated: 2022/07/06 17:02:04 by junylee          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef EXECUTE_H
# define EXECUTE_H

# include "minishell.h"

/*
** =============================================================================
** execute.c
** =============================================================================
*/

void execute_tree(t_node *node);

/*
** =============================================================================
** execve.c
** =============================================================================
*/

void	exec(t_node *node, int status);

/*
** =============================================================================
** execve2.c
** =============================================================================
*/

char	**get_cmd_opt(t_node *node);
void	exec_signal(int status);

/*
** =============================================================================
** pipe.c
** =============================================================================
*/

void	execute_pipe(t_node *node);

/*
** =============================================================================
** redir.c
** =============================================================================
*/

int	connect_redir(void);
int	disconnect_redir(void);
void	redirection(t_node *node);

/*
** =============================================================================
** heredoc.c
** =============================================================================
*/

void	start_heredoc(t_node *node);
void	heredoc(t_list	*hdoc);
t_heredoc	*new_heredoc(t_node *node);
void	clear_heredoc(void *content);

#endif